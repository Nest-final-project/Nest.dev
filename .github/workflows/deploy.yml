name: deploy.yml
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: gradlew bootJar
        run: ./gradlew bootJar

      - name: Debug paths in GitHub Actions
        run: |
          echo "Checking paths to be copied"
          ls -la ./build/libs
          ls -la ./

      # 도커허브: 도커파일 기준으로 도커헙에 푸쉬
      - name: Build Docker image
        run: docker build -t leeyounseung/nest .

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image to DockerHub
        run: docker push leeyounseung/nest

      - name: Create .env file
        run: |
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "DB_URL=${{ secrets.DB_URL }}" >> .env
          echo "TOSS_SECRET_KEY=${{ secrets.TOSS_SECRET_KEY }}" >> .env
          echo "TOSS_CLIENT_KEY=${{ secrets.TOSS_CLIENT_KEY }}" >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> .env
          echo "GMAIL=${{ secrets.GMAIL }}" >> .env
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> .env
          echo "AWS_SES_ACCESS_KEY=${{ secrets.AWS_SES_ACCESS_KEY }}" >> .env
          echo "AWS_SES_SECRET_KEY=${{ secrets.AWS_SES_SECRET_KEY }}" >> .env
          echo "AWS_SES_FROM_EMAIL=${{ secrets.AWS_SES_FROM_EMAIL }}" >> .env
          echo "GF_SECURITY_ADMIN_USER=${{ secrets.GF_SECURITY_ADMIN_USER }}" >> .env
          echo "GF_SECURITY_ADMIN_PASSWORD=${{ secrets.GF_SECURITY_ADMIN_PASSWORD }}" >> .env
        # secrets에 정의된 값을 사용하여 .env 파일을 생성
      - name: Copy all docker-related files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST}}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }} # 서버 접속 SSH Private Key
          port: 22
          source: '.env,./docker-compose.yml,prometheus'
          target: "/home/ubuntu/Nest.dev"

      - name: SSH and deploy via docker-compose
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST}}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script_stop: true
          script: |
            cd Nest.dev
            docker pull leeyounseung/nest
            docker-compose down
            docker container prune -f
            docker-compose up -d


