version: '3.8'

services:
#  mysql:
#    image: mysql:8.0.36
#    container_name: mysql-nest
#    environment:
#      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
#      MYSQL_DATABASE: ${DB_NAME}
#      MYSQL_USER: ${DB_USERNAME}
#      MYSQL_PASSWORD: ${DB_PASSWORD}
#    command:
#        [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', '--lower_case_table_names=1' ]
#    ports:
#      - "3307:3306"
#    volumes:
#      - mysql-data:/var/lib/mysql
#    networks:
#      - nest-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - nest-network

#도커허브 이미지 퓨시 (image: nest-app/도커허브계정명)
  nest_app:
    container_name: nest-app
    image: leeyounseung/nest
    #    build:
    #      context: .
    #      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
#      - mysql
      - redis
    environment:
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      TOSS_SECRET_KEY: ${TOSS_SECRET_KEY}
      TOSS_CLIENT_KEY: ${TOSS_CLIENT_KEY}
      CLIENT_SECRET: ${CLIENT_SECRET}
      AWS_SES_ACCESS_KEY: ${AWS_SES_ACCESS_KEY}
      AWS_SES_SECRET_KEY: ${AWS_SES_SECRET_KEY}
      AWS_SES_FROM_EMAIL: ${AWS_SES_FROM_EMAIL}

    networks:
      - nest-network

volumes:
  mysql-data:

networks:
  nest-network:

