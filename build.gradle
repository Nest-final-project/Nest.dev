plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'Caffeine'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    querydslVersion = "6.11" // 안정 버전 사용을 권장합니다.
    springdocVersion = "2.8.9"
}

dependencyManagement {
    dependencies {
        dependency "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
        dependency "org.springdoc:springdoc-openapi-starter-webmvc-api:${springdocVersion}"
        dependency "org.springdoc:springdoc-openapi-starter-common:${springdocVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Swagger/OpenAPI Documentation
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-api:${springdocVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-common:${springdocVersion}"

    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.12.6'

    // bcrypt
    implementation 'at.favre.lib:bcrypt:0.10.2'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.webjars:sockjs-client:1.1.2'
    implementation 'org.webjars:stomp-websocket:2.3.3-1'
    implementation 'org.springframework.security:spring-security-messaging'

    // 외부 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // JSON 파싱
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    // QueryDSL
    implementation 'com.querydsl:querydsl-apt:5.0.0'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'com.querydsl:querydsl-core:5.0.0'

    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    implementation 'org.springframework.boot:spring-boot-starter-cache'

    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'


    //Redisson
    implementation 'org.redisson:redisson-spring-boot-starter:3.27.1'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

    // test
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'

    // AWS SES
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'com.amazonaws:aws-java-sdk-ses:1.12.3'

    // SMTP
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // AWS SDK for S3
    implementation 'software.amazon.awssdk:s3:2.25.1'
    // AWS SDK HTTP 클라이언트 (Apache HttpClient 사용 권장)
    implementation 'software.amazon.awssdk:url-connection-client:2.25.1'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

}

// Querydsl 빌드 옵션 설정
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [generated]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}
tasks.named('test') {
    useJUnitPlatform()
}

def frontendDir = "$projectDir/src/main/frontend"

sourceSets {
    main {
        resources {
            srcDirs = ["$projectDir/src/main/resources"]
        }
    }
}

